Rozproszony system kontroli wersji, który pozwala na śledzenie zmian w projekcie w trakcie jego rozwijania.

Stany plików:

Zmodyfikowany (modified) ------git add-----> śledzony (staged) -----git commit---->zatwierdony (commited)

git config --global user.email "mail"

git config --global user.name "grzegorz"


git clone [URL] - klonuje repozytorium zdalne 
git init - 	inicjacja lokalnego repozytorium w akutalnym katalogu  (tworzone są pkiki gita - .git)
git add - 	dodaje pliki do repozytorium (./--all dodaje wszystko)
git remote add origin <remote_name> <remote_repo_url> - mapowanie lokalnego repozytroium do repozytorium zdalnego
git commit -m ""- zatwierdzanie zmian 
git commit --amend -m "opis" -- Z opcją --amend nie jest tworzona nowa wersja, tylko zastępowana jest bieżąca wersja.
git push origin master - wysyłanie zmian z repo lokalnego do repozytorium zdalnego do mastera

git status - 	sprawdzenie stanu plików
git diff - 	dokładne informacje o zmianach po add i zmodyfikowaniu
git diff-tree hash - pokazuje co zostało zmienione w danym commicie
git log - wyświetla historie zmian
git config --global alias.gr "log --all --decorate --oneline --graph" --> alaias dla grafu gr

git rm - 	usuwanie plików z repozytorium --> potem commit
git mv file_from file_to - zmiana nazwy pliku lub przenoszenie
git branch - pokazuje branche lokalne które mamy dostępne
git clean - słóży do usuwanie nieśledzonych plików/katalogów nie może być owrócone ---> z flagą -nd (pliki i katalogi) wyświetla co może być usunęte
samo polecenie bezpośrenio nie usuwa nic, trzeba używać flag i zatwierdzać usuwanie
git reset - cofnięcie polecenia git add lub cofnięcie zmian w projekcie z modyfikacją historii 
git checkout hash zmiant z polecenia git log - pozwala na przywrócenie wersji projektu ---> po wprowadzeniu jakiś zmian możemy je zapisać jako nowy branch poleceniem git checkout -g nazwa-gałęzi
git revert hash zmian - odwraca zmiany z danego commita tworząc nowy commit który te zmiany odwraca


git stash - odkłądanie zmian oczekujących na zatwierdzenie, umożliwia np przełączenie sie na inny branch iz tam dodanie tych zmian 
git stash push -m "" - pozwala na przechowywanie z zmian z kometarzami 
git stash list - pokazuje liste stosu
git stash pop hash - przywraca zmiany ze stosu
git stash dropp - usuwanie stosu


git fetch - pobieranie zmian ze zdalneo repozytorium bez mergowania


Brach - rozgałęzienie projektu umożliwiające rozwój projektu bez ingeręcji w główną gałąź

git branch - wyświetla liste branchy
git branch nazwa - tworzenie nowego brancha
git branch -D nazwa -usuwanie brancha
git push orgin --delete nazwa brancha - usuwanie brancha na zdalnym repo
git checkout nazwa brancha - przechodzenie między branchami 

git merge - łączenie brancha z gałęzią na której się aktualnie znajdujemy - nie zmienia historii
git rebase - łączy brancha z np masterem lub winnym branchem modyfikując historie tzn. commity są wciągane do danego brancha jako kolejne


fork - kopiowanie zdalnego repozytorium do niezależnej pracy 
git add remote ALIAS np upstream ADRES - dodawanie kolejnego zdalnego repo


Pull request - przesłanie zmian do głownego repozytorium z jego kopii forka lub danego projektu. Może być akceptowany albo odrzucony



git hook - skrypt wykonywany przed akcją/ jakimś zajściem w gicie


username=$(git config user.name)

if [ "$username" != "GrzegorzGiniewicz" ]

then
	
	cat <<\EOF

ERROR

EOF
	
	exit 1

fi






