/bin -binarne (wykonywalne) pliki najbardziej podstawowych narzêdzi np. cat
/boot - pliki niezbêdne do uruchomienia systemu
/etc - pliki konfiguracyjne, ustawienia systemowe 
/dev - pliki urz¹dzeñ ( lecz odnosz¹ siê do urz¹dzeñ - za ich poœrednictwem system komunikuje siê z urz¹dzeniami )
/opt - do instalacji dodatkowego oprogramowania np. java
/proc - wirtualny katalog, zawieraj¹cy dane o aktualnie uruchomionych procesach
/sbin -  pliki wykonywalne poleceñ, które mog¹ byæ wykonywane tylko przez administratora
/sys - interfejs zmiany parametrów j¹dra
/var - Ten katalog zawiera dane, które s¹ zmieniane podczas normalnej pracy systemu operacyjnego, np logi.
/usr - Katalog, w którym przechowywane s¹ programy, biblioteki itp. na u¿ytek wszystkich u¿ytkowników.
/media - Katalog, w którym montowane s¹ partycje, cd-romy, dyskietki, itp.
/lib - W tym katalogu znajduj¹ siê biblioteki programów wykorzystywanych przez system i u¿ytkowników
/home - W tym katalogu znajduj¹ siê katalogi domowe u¿ytkowników
/tmp - Katalog tymczasowy (temporary) na u¿ytek systemu
/root katalog domowy admisnistratora

bashrc - plik w którym personalizujemy œrodowisko dla u¿ytkownika 

SSH (ang. secure shell) to standard protoko³ów komunikacyjnych u¿ywanych w sieciach komputerowych TCP/IP
ssh nazwa_uzytkownika@adres_hosta 

########################## Link twardy i symboliczny

Dowi¹zanie twarde - to utworzenie nowej nazwy dla istniej¹cego pliku. Wskazuje na te same dane. 
Systemy plików ext zawieraj¹ informacje o plikach w i-wêz³ach
Istniej¹ tylko w obrêbie jednego systemu plików - partycji . 
Plik usuniêty zostanie w momencie usuniêcia wszystkich takich linków.
(nie mozna robiæ dla katalogów)

Dowi¹zania sta³e charakteryzuj¹ siê tym, ¿e posiadaj¹ ten sam i-wêze³ co wskazywany plik. 
W praktyce oznacza to, ¿e dowi¹zanie takie zawiera pe³n¹ informacjê o pliku i w razie skasowania
oryginalnego pliku dowi¹zanie nadal bêdzie zawieraæ informacje o tym pliku (jego zawartoœæ).

ln cel nawza_dowi¹zania
ls -l - pokazuje liczbe dowi¹zañ

Dowi¹zanie symboliczne - Link symboliczny to dowi¹zanie do pliku wskazuj¹ce na jego nazwê.

ln -s cel nazwa_dowi¹zania

Linki usuwamy poleceniem rm


###################################

/proc/version - wersia
/etc/issue - dystrybucja
/proc/cpuinfo -informacje o cpu
df -h informacje o dysku
free - pamiêæ
id nazwa_u¿ytkownika - info o u¿ytkowniku UID GID
last - informacje o logowaniach
who -pokazuje zalogowanego u¿ytkownika
env - pokazuje zmienne œrodowiskowe
uname -a info o systemi i j¹drze
/var/log/dmesg - logi ze startu systemu - j¹dra
/var/log//messeges - logi systemu i serwisuów
history - polecenie do przegl¹dania histori terminala


##############################################

SIGSTOP - ctrl-z Sygna³ ten zatrzymuje proces. Podobnie jak sygna³u SIGKILL, nie mo¿na go zignorowac, ani przechwyciæ
SIGINIT - ctrl-c Domyœlnie powoduje zakoñczenie procesu . Powoduje zatrzymanie procesu w termianlu
SIGTERM - Zakoñczenie procesu - ³agodniejsze pozwala procesowi sie zamkn¹æ, zapisaæ.
SIGKILL - kill -9 - Zamkniêcie procesu - wymuszone, natychmiastowe
SIGUSR_1 - Sygna³ zdefiniowany przez uzytkownika



######################################

STDIN (0) < << standardowe wjeœcie


STDOUT (1) > >> standardowe wyjœcie


STDERR (2) 2> 2>> standardoy strumieñ b³êdów
np z³e polecenie lsf 2> error.txt - zwartoœæ b³êdu bêdzie w pliku

&> - przekierowanie do pliku STDOUT i STDERR

2>&1 przkeirowanie ERR na OUT

i>&j przkierowanie i na j (1,2,3)

######################################

xargs - xargs czyta ze standardowego wejœcia a nastêpnie wykonuje wskazany program,
przekazuj¹c do niego wczytane parametry. 
Warto wiedzieæ o dwóch domyœlnych cechach tej komendy. 
Jeœli nie wska¿emy jaki program ma zostaæ wykonany, to bêdzie to echo

xargs < test.sh - wyœwietli plik w terminalu jak echo

find -name "*.log" | grep "install" - znajdzie pliki o rozsze¿eniu log i podœwietli te z install w nazwie

find -name "*.log" | xargs grep "install" - znajdzie pliki z rozszerzeniem log i dla piwerszego znalezionego wyœle polecenie grep "instal" - bêdzie szuka³ w œrodku pliku.

Find œcie¿ka argumenty - w¿ana jest kolejnoœæ

######################################

printenv - wyœwietla zmienne œrodowiskowe

PATH - zmienna, która mówi w jakich folderach s¹ pliki wykonywalne dla danych komend
Dziêki temu nie musimy wpisywaæ pe³nej œcie¿ki np do pythona tylko mo¿emy napisaæ python i scie¿ka skryptu.

OLDPWD - zmienna przechowuj¹ca œcie¿kê do poprzedniego katalogu

PWD - zmienna przechowuj¹ca œcie¿kê do bie¿¹cego katalogu

HOME - zmienna przechowuj¹ca œcie¿kê do katalogu domowego

$# - liczba parametrów przekazanych do programu
#? - kod zakoñczenia polecenia lub programu wywo³anego z programu pow³oki
$0 - pod zmienna t¹ kryje siê nazwa uruchomionego programu
$1,$2 - kolejne parametry programu

OSTYPE=Linux - typ systemu 
EDITOR=vim - nazwa domyœlnego edytora tekstu
LOGNAME- nasz login 

set - wyœwietla ustawienia zmiennych lokalnych 

$UID - uid u¿ytkownika

dodawanie zmiennych œrodowiskowych:

export SCRIPT_PATH=/usr/bin/skrypt.sh
zmiana:
export EDITOR=mcedit\
dodawanie:
PATH=$PATH:moj_katalog


###############################################



ls -la - listuje pliki w danej œcie¿ce, te niewidoczne te¿ 
ls - R - pokazuje drzewo folderów

alias 'polecenie'='inne_polecenie_lub_kilka_polecen'

cp -kopiowanie plików
cp -r cir1 dir3 - jeœli nie ma danego folderu polecenie cp stworzy je
cp ../1.txt ../2.txt . - skopiuje pliki z poprzednij scie¿ki do aktualnej, mo¿na podawaæ kilka zróde³
ostatnie jest miejsce przeznaczenia.

less - pozwala na przegl¹danie pliku, mo¿na nawigowaæ 
dir.txt less 
po naciœniecu / mo¿na wpisaæ feaz której siê szuka, q- wychodzenie z dokumentu
 
top - program pokazuje procesy/ zu¿ycie procesora i pamiêci. 
Mo¿na w nim zabiæ program k, mozna zmieniæ odœwie¿anie s

which - zwraca scie¿kê danego elementu. Jeœli to polecenie to poka¿e gdzie jest.
whatis - zwraca krotka informacje o poleceniu z manuala.

chown {-R} [user]{:group} [file|directory] zmiana w³aœciciela pliku/ albo folderu ze wszystkim w œrodku
chgrp {-R} [group] [file|directory] -zmiana grupy pliku/ albo folderu ze wszystkim w œrodku

useradd nazwa u¿ytkownika -m(stworzy home directory) -s /bin/bash -g users (grupa) -stworzenie u¿ytkownika 
passwd -zmiana has³a dla roota, jeœli doda siê nazwe u¿ytkownika wtedy zmiana dla u¿ytkownika

userdel - usuwa u¿ytkownika/has³o ale nie jego home directory z flag¹ -r usunie wszystko

alias 'nasza_definicja'='polecenie'
np.:
alias 'p'='ps -aux'
unalias p

groups -wyœwietla grupy w systemie do których u¿ytkownik jest do³¹czony
cat /etc/gruop - wyœiwtla wszystkie grupy w systemie i przynale¿nych u¿ytkowników

groupadd nazwa_grupy -dodawanie grupy
groupdel nazwa_grupy - usuwanie grupy

gpasswd -a (dodaæ) -d(usun¹æ) nazwa_u¿ytkownika nazwa_grupy -dodawanie u¿ytkownika do grupy

Wyœwietlanie pamiêci RAM:

cat /proc/meminfo
free 
vmstat -s

df -h - pokazuje zajête miejsce na dysku w MB
du -h - pokazuje miejsce zajmowane przez pliki w danej lokacji flaga -s pokazuje tylko podsumowanie

watch - uruchamia polecenie w trybie czasowym odswie¿aj¹c je o dany czas
watch ls -la
watch ps -aux

head - domyœlnie pokazuje pierwszych 10 linii -n zmiana iloœci linii , -f nie wychodzi z pliku i pokazuje zmiany
tail - domyœlnie pokazuje ostatnich 10 linii - mo¿na u¿ywaæ z kilkoma plikami
head nazwa_pliku

find ./Desktop -name 'test.*'  - szukanie plików
find ./Desktop -mtime -2 - szuka plików które zosta³y stworzone 2 dni temu

wc nazw pliku - liczenie znaków w pliku wiersze/s³owa/znaki -l/-w/c  -L pokazuje najd³u¿szy wiersz

cal - pokazuje kalendarz 
cal 2 2019
cal | awk 'NR == 6 {print $3}'  - pokazuje dzieñ z aklendarza z wybranego wiersza z wybranej kolumny


date - wyœwietla date i czas / mo¿na odpowiednio formatowaæ 
-s "data czas" - zmienia czas i date
date +%d/%m/%y -wyœwietla date d/m/r
date "+DATE %m/%d/%y%nTIME: %H/%M/%S" - wyœwietli DATE:   i TIME: w osobnych liniach dziêki %n

; - rozdziela komendy. Jeœli jakaœ komenda nie istnieje zoistanie wyœwietlony b³¹d ale kompenda pójdzie dalej
ls -la ; pwd

&& - ³¹czy komendy ale nie przejdzie dalej jeœli jakaœ zawiedzie

&& AND

if [ $condition1 ] && [ $condition2 ]
#  Same as:  if [ $condition1 -a $condition2 ]
#  Returns true if both condition1 and condition2 hold true...

if [[ $condition1 && $condition2 ]]    # Also works.
#  Note that && operator not permitted inside brackets
#+ of [ ... ] construct.

|| OR

if [ $condition1 ] || [ $condition2 ]
# Same as:  if [ $condition1 -o $condition2 ]
# Returns true if either condition1 or condition2 holds true...

if [[ $condition1 || $condition2 ]]    # Also works.
#  Note that || operator not permitted inside brackets
#+ of a [ ... ] construct.

 
tee – uniksowe polecenie, wypisuj¹ce dane wejœciowe na standardowe wyjœcie i do dowolnej liczby plików.


apt-get – program bêd¹cy sk³adnikiem narzêdzia Advanced Packaging Tool (APT-a). Jego g³ównym zadaniem jest pobieranie, instalowanie i usuwanie pakietów. 
install - instaluje podane pakiety;
remove - usuwa podane pakiety;
purge - ca³kowicie usuwa podane pakiety, razem z ich ustawieniami;
update - aktualizuje listê pakietów;
upgrade - aktualizuje pakiety;


tar - pakowanie/rozpakowywanie w formacie tar
tar -cvf (c- tworzenie archiwum, v - verbouse poka¿ postêp, f - podawanie nazwy ) nazwa_paczki plik/folder do pakowania
tar -xvf rozpakowywanie
tar -czvf - pakowanie do tar.gz
tar -tf wyœwietlanie zawartoœci archiwum
tar -xvf paczka -c (do danej œcie¿ki która istnieje) scie¿ka

mkdir Bash ; chmod 777 | tar xvf bash.tar -c Bash

grep " fraza" plik1 plik2.. przeszukiwanie fraz
-i ignoruje wielkoœæ znaków
-n numeruje wiersze
-v wszystki linie które nie maj¹ danej frazy

ifconfig - informacje sieciowe
sudo ifconfig eth0 down/up - wy³¹czanie w³¹czanie sieci


netstat -rozbudowane narzêdzie sieciowe (np po³¹czenia sieciowe/ porty/ tabele routingu) -najlepiej u¿ywaæ z | less
-a wszystkie po³¹czenia
-t tylko tcp
-u tylko udp
-l listening
-s statystyki (wysy³ane pakiety itp)
-p podaje pid procesu
-n podaje porty
-ie daje tto samo co ifconfig


.bashrc - plik konfiguracyjny basha u¿ytkownika, pozwala wprowadziæ sta³e zmiany przy otwieraniu nowego terminala
